// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`parser can parse a file into a syntax expanded ast 1`] = `
[
  "ast",
  [
    "use",
    [
      "::",
      [
        "::",
        "std",
        "macros",
      ],
      "all",
    ],
  ],
  [
    "use",
    [
      "::",
      [
        "::",
        "std",
        "io",
      ],
      [
        "object",
        "read",
        [
          ":",
          "write",
          "io_write",
        ],
      ],
    ],
  ],
  [
    "fn",
    [
      "->",
      [
        "fib",
        [
          ":",
          "n",
          "i32",
        ],
      ],
      "i32",
    ],
    [
      "block",
      [
        "if",
        [
          "<=",
          "n",
          1,
        ],
        [
          ":",
          "then",
          [
            "block",
            "n",
          ],
        ],
        [
          ":",
          "else",
          [
            "block",
            [
              "+",
              [
                "fib",
                [
                  "-",
                  "n",
                  1,
                ],
              ],
              [
                "fib",
                [
                  "-",
                  "n",
                  2,
                ],
              ],
            ],
          ],
        ],
      ],
    ],
  ],
  [
    "macro_let",
    [
      "=",
      "extract_parameters",
      [
        "=>",
        [
          "definitions",
        ],
        [
          "block",
          [
            "concat",
            [
              "\`",
              "parameters",
            ],
            [
              "slice",
              "definitions",
              1,
            ],
          ],
        ],
      ],
    ],
  ],
  [
    "if",
    [
      ">",
      "x",
      10,
    ],
    [
      ":",
      "then",
      [
        "block",
        10,
      ],
    ],
    [
      ":",
      "else",
      [
        "block",
        20,
      ],
    ],
  ],
  [
    "if",
    [
      "<",
      "x",
      {
        "type": "f64",
        "value": 0,
      },
    ],
    [
      ":",
      "then",
      -1,
    ],
    [
      ":",
      "elif",
      [
        "<",
        "x",
        {
          "type": "f64",
          "value": 2,
        },
      ],
    ],
    [
      ":",
      "then",
      0,
    ],
    [
      ":",
      "else",
      2,
    ],
  ],
  [
    "reduce",
    "array",
    0,
    1,
    2,
    [
      ":",
      "hey",
      [
        "=>",
        [],
        [
          "block",
          [
            "log",
            "val",
          ],
          [
            "+",
            "acc",
            "val",
          ],
        ],
      ],
    ],
    [
      ":",
      "with",
      [
        "=>",
        [],
        0,
      ],
    ],
  ],
  10,
  [
    "+",
    3,
  ],
  [
    "mul",
    [
      "&",
      "self",
    ],
    [
      ":",
      "other",
      [
        "Vec",
        [
          "generics",
          "T",
        ],
      ],
    ],
  ],
  [
    "mul",
    [
      "&",
      "self",
    ],
    [
      ":",
      "other",
      [
        "Vec",
        [
          "generics",
          "T",
        ],
      ],
    ],
  ],
  [
    "let",
    [
      "=",
      "a",
      [
        "+",
        [
          "reduce",
          "array",
          0,
          [
            "=>",
            [
              "acc",
              "val",
            ],
            [
              "block",
              [
                "+",
                "acc",
                "val",
              ],
            ],
          ],
        ],
        [
          "*",
          10,
          3,
        ],
      ],
    ],
  ],
  [
    "let",
    [
      "=",
      "x",
      [
        "my_func",
        [
          "add",
          1,
          2,
        ],
        [
          "=>",
          [],
          [
            "block",
            [
              "hello",
            ],
          ],
        ],
        [
          "+",
          3,
          4,
        ],
      ],
    ],
  ],
  [
    "let",
    [
      "=",
      "vec",
      [
        "object",
        [
          ":",
          "a",
          [
            "hey",
            "there",
          ],
        ],
        [
          ":",
          "b",
          2,
        ],
      ],
    ],
  ],
  [
    "closure_param_test",
    1,
    [
      "=>",
      [],
      "a",
    ],
    3,
    [
      "=>",
      [],
      [
        "block",
        [
          "hey",
          "there",
        ],
      ],
    ],
    4,
    [
      "=>",
      [],
      5,
    ],
    [
      "=>",
      [],
      [
        "block",
        6,
      ],
    ],
    [
      "=>",
      [],
      [
        "block",
        7,
      ],
    ],
    8,
  ],
  [
    "let",
    [
      "=",
      [
        "tuple",
        "x",
        "y",
      ],
      [
        "tuple",
        1,
        2,
      ],
    ],
  ],
  [
    "+",
    [
      "Array",
      [
        "generics",
        "Hey",
        "There",
      ],
      1,
      2,
      3,
    ],
    3,
  ],
  [
    "obj",
    [
      "Test",
      [
        "generics",
        "T",
      ],
    ],
    [
      "object",
      [
        ":",
        "c",
        "i32",
      ],
    ],
  ],
  [
    "match",
    "x",
    [
      ":",
      [
        "Some",
        [
          "generics",
          "i32",
        ],
      ],
      [
        "Some",
        [
          "generics",
          "i32",
        ],
        [
          "object",
          [
            ":",
            "value",
            [
              "+",
              [
                "value",
                "x",
              ],
              1,
            ],
          ],
        ],
      ],
    ],
    [
      ":",
      "None",
      [
        "None",
        [
          "object",
        ],
      ],
    ],
  ],
  [
    "match",
    [
      "match",
      [
        "pop",
        "arr",
      ],
      "val",
      [
        ":",
        [
          "Some",
          [
            "generics",
            [
              "Optional",
              [
                "generics",
                "i32",
              ],
            ],
          ],
        ],
        [
          "block",
          [
            "value",
            "val",
          ],
        ],
      ],
      [
        ":",
        "None",
        [
          "block",
          [
            "None",
            [
              "object",
            ],
          ],
        ],
      ],
    ],
    "v",
    [
      ":",
      [
        "Some",
        [
          "generics",
          "i32",
        ],
      ],
      [
        "block",
        [
          "value",
          "v",
        ],
      ],
    ],
    [
      ":",
      "None",
      [
        "block",
        -1,
      ],
    ],
  ],
  [
    "match",
    [
      "match",
      [
        "pop",
        "arr",
      ],
      "val",
      [
        ":",
        [
          "Some",
          [
            "generics",
            [
              "Optional",
              [
                "generics",
                "i32",
              ],
            ],
          ],
        ],
        [
          "block",
          [
            "value",
            "val",
          ],
        ],
      ],
      [
        ":",
        "None",
        [
          "block",
          [
            "None",
            [
              "object",
            ],
          ],
        ],
      ],
    ],
    "v",
    [
      ":",
      [
        "Some",
        [
          "generics",
          "i32",
        ],
      ],
      [
        "block",
        [
          "value",
          "v",
        ],
      ],
    ],
    [
      ":",
      "None",
      [
        "block",
        -1,
      ],
    ],
  ],
  [
    "fn",
    [
      "->",
      [
        "test",
        [
          "generics",
          "T",
        ],
        [
          ":",
          "a",
          1,
        ],
      ],
      "i32",
    ],
  ],
  [
    "fn",
    [
      "main",
    ],
    [
      "block",
      [
        "let",
        [
          "=",
          "a",
          [
            "+",
            [
              "...",
              [
                "hey",
                "test",
              ],
            ],
            [
              "now",
              [
                "&",
                "other",
              ],
            ],
          ],
        ],
      ],
      [
        "let",
        [
          "=",
          "x",
          [
            "+",
            10,
            [
              "block",
              [
                "+",
                20,
                30,
              ],
            ],
          ],
        ],
      ],
      [
        "let",
        [
          "=",
          "y",
          [
            "if",
            [
              ">",
              "x",
              10,
            ],
            [
              ":",
              "then",
              [
                "block",
                10,
              ],
            ],
            [
              ":",
              "else",
              [
                "block",
                20,
              ],
            ],
          ],
        ],
      ],
      [
        "let",
        [
          "=",
          "n",
          [
            "block",
            [
              "if",
              [
                ">",
                [
                  "len",
                  "args",
                ],
                1,
              ],
              [
                ":",
                "then",
                [
                  "block",
                  [
                    "log",
                    "console",
                    [
                      "new_string",
                      [
                        "object",
                        "ObjectLiteral-840",
                        [
                          [
                            "from",
                            [
                              "FixedArray",
                              72,
                              101,
                              121,
                              32,
                              116,
                              104,
                              101,
                              114,
                              101,
                              33,
                            ],
                          ],
                        ],
                      ],
                    ],
                  ],
                  [
                    "unwrap",
                    [
                      "parseInt",
                      [
                        "at",
                        "args",
                        1,
                      ],
                    ],
                  ],
                ],
              ],
              [
                ":",
                "else",
                [
                  "block",
                  10,
                ],
              ],
            ],
          ],
        ],
      ],
      [
        "let",
        [
          "=",
          "x2",
          10,
        ],
      ],
      [
        "let",
        [
          "=",
          "z",
          [
            "nothing",
          ],
        ],
      ],
      [
        "let",
        [
          "=",
          "a",
          [
            "boop",
            "hello",
            1,
          ],
        ],
      ],
      [
        "let",
        [
          "=",
          "test_spacing",
          [
            "fib",
            "n",
          ],
        ],
      ],
      [
        "let",
        [
          "=",
          "result",
          [
            "fib",
            "n",
          ],
        ],
      ],
      [
        "let",
        [
          "=",
          "x",
          [
            "&",
            "hey",
          ],
        ],
      ],
      [
        "$",
        "hey",
      ],
      [
        "$@",
        [
          "hey",
        ],
      ],
      [
        "$",
        [
          "hey",
        ],
      ],
      [
        "$",
        [
          "extract",
          "equals_expr",
          2,
        ],
      ],
      [
        "block",
        [
          "$",
          "body",
        ],
      ],
      [
        "+",
        "x",
        5,
      ],
      [
        "+",
        [
          "+",
          "x",
          "y",
        ],
        10,
      ],
      [
        "+",
        [
          "*",
          "x",
          "y",
        ],
        10,
      ],
      [
        "x",
      ],
      "x",
      [
        "let",
        [
          "=",
          "vec",
          [
            "object",
            [
              ":",
              "x",
              10,
            ],
            [
              ":",
              "y",
              [
                "Point",
                [
                  "object",
                  [
                    ":",
                    "x",
                    10,
                  ],
                  [
                    ":",
                    "y",
                    20,
                  ],
                ],
              ],
            ],
            [
              ":",
              "z",
              [
                "object",
                [
                  ":",
                  "a",
                  10,
                ],
                [
                  ":",
                  "b",
                  20,
                ],
              ],
            ],
          ],
        ],
      ],
      [
        "pub",
        "fn",
        [
          "main",
        ],
        [
          "block",
          [
            "html",
            [
              "div",
              [
                ":",
                "attributes",
                [
                  "dict",
                  "array",
                ],
              ],
              [
                ":",
                "children",
                [
                  "p",
                  [
                    ":",
                    "attributes",
                    [
                      "dict",
                      "array",
                    ],
                  ],
                  [
                    ":",
                    "children",
                    [
                      "array",
                      [
                        "new_string",
                        [
                          "object",
                          "ObjectLiteral-1125",
                          [
                            [
                              "from",
                              [
                                "FixedArray",
                                72,
                                101,
                                108,
                                108,
                                111,
                                32,
                                116,
                                104,
                                101,
                                114,
                                101,
                                33,
                                33,
                                10,
                                32,
                                32,
                                32,
                                32,
                                32,
                                32,
                              ],
                            ],
                          ],
                        ],
                      ],
                    ],
                  ],
                  [
                    "p",
                    [
                      ":",
                      "attributes",
                      [
                        "dict",
                        "array",
                      ],
                    ],
                    [
                      ":",
                      "children",
                      [
                        "array",
                        [
                          "new_string",
                          [
                            "object",
                            "ObjectLiteral-1173",
                            [
                              [
                                "from",
                                [
                                  "FixedArray",
                                  72,
                                  111,
                                  119,
                                  32,
                                  97,
                                  114,
                                  101,
                                  32,
                                  121,
                                  111,
                                  117,
                                  32,
                                  116,
                                  111,
                                  100,
                                  97,
                                  121,
                                  10,
                                  32,
                                  32,
                                  32,
                                  32,
                                  32,
                                  32,
                                ],
                              ],
                            ],
                          ],
                        ],
                      ],
                    ],
                  ],
                ],
              ],
            ],
          ],
        ],
      ],
    ],
  ],
]
`;

exports[`parser supports generics 1`] = `
[
  "ast",
  [
    "use",
    [
      "::",
      "std",
      "all",
    ],
  ],
  [
    "type",
    [
      "=",
      "DsArrayi32",
      [
        "DsArray",
        [
          "generics",
          "i32",
        ],
      ],
    ],
  ],
  [
    "pub",
    "fn",
    [
      "main",
    ],
    [
      "block",
      [
        "let",
        [
          "=",
          "arr",
          [
            "new_fixed_array",
            [
              "generics",
              "i32",
            ],
            10,
          ],
        ],
      ],
      [
        "set",
        [
          "generics",
          "i32",
        ],
        "arr",
        0,
        1,
      ],
      [
        "get",
        [
          "generics",
          "i32",
        ],
        "arr",
        0,
      ],
    ],
  ],
]
`;
